{"greeting": "Greetings from The On-Line Encyclopedia of Integer Sequences! http://oeis.org/", "query": "id:A225627", "count": 1, "start": 0, "results": [{"number": 225627, "data": "1,1,2,6,12,30,30,84,120,180,210,420,660,780,1260,4620,5460,5460,5460,9240,13860,13860,16380,32760,120120,180180,180180,235620,180180,471240,1021020,1021020,1141140,1141140,2282280,2282280,4476780,4476780,6846840,6846840", "name": "a(n) = lcm(A000793(n),p1,p2,...,pk) for such a partition {p1+p2+...+pk} of n that maximizes this value among all partitions of n.", "comment": ["Row 2 of A225630.", "This could be called a \"twice-iterated Landau's function.\""], "link": ["<a href=\"/index/Lc#lcm\">Index entries for sequences related to lcm's</a>"], "formula": ["a(n) = A225636(n)*A000793(n)."], "program": ["(Scheme):", "(define (A225627 n) (let ((maxlcm (list 0))) (fold_over_partitions_of n (A000793 n) lcm (lambda (p) (set-car! maxlcm (max (car maxlcm) p)))) (car maxlcm)))", "(define (fold_over_partitions_of m initval addpartfun colfun) (let recurse ((m m) (b m) (n 0) (partition initval)) (cond ((zero? m) (colfun partition)) (else (let loop ((i 1)) (recurse (- m i) i (+ 1 n) (addpartfun i partition)) (if (< i (min b m)) (loop (+ 1 i))))))))"], "xref": ["Cf. A000793, A225630, A225628, A225629, A225636."], "keyword": "nonn", "offset": "0,3", "author": "_Antti Karttunen_, May 13 2013", "references": 4, "revision": 13, "time": "2018-03-04T17:47:40-05:00", "created": "2013-05-25T04:14:04-04:00"}]}