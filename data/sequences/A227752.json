{"greeting": "Greetings from The On-Line Encyclopedia of Integer Sequences! http://oeis.org/", "query": "id:A227752", "count": 1, "start": 0, "results": [{"number": 227752, "data": "1,1,1,1,1,0,2,1,1,1,0,1,2,1,2,1,1,1,0,2,0,0,0,1,2,2,0,2,2,1,2,1,1,1,1,2,1,0,1,2,1,0,0,0,1,0,1,1,2,2,1,3,1,0,1,2,2,2,1,2,2,1,2,1,1,1,1,2,1,0,1,2,2,0,0,0,2,0,2,2,1,0,0,0,0,0,0", "name": "a(n) is the number of occurrences of n in A226062.", "link": ["Antti Karttunen, <a href=\"/A227752/b227752.txt\">Table of n, a(n) for n = 0..319</a>"], "formula": ["In the following formula [] stands for Iverson brackets. Essentially we are just naively counting the integers which A226062 maps to n. A000225 is the guaranteed upper limit for the runlength codes for the partitions of size n:", "a(n) = Sum_{i=0..A000225(A227183(n))} [A226062(i)==n].", "a(n) = Sum_{i=A227368(A227183(n))..A000225(A227183(n))} [A226062(i)==n]. [This is slightly faster if somebody invents a clever formula for the lower limit A227368.]"], "program": ["(Scheme, a naive implementation which always begins search from zero)", "(definec (A227752 n) (add (lambda (k) (if (= n (A226062 k)) 1 0)) 0 (A000225 (A227183 n))))", ";; The following function implements sum_{i=lowlim..uplim} intfun(i)", "(define (add intfun lowlim uplim) (let sumloop ((i lowlim) (res 0)) (cond ((> i uplim) res) (else (sumloop (1+ i) (+ res (intfun i)))))))"], "xref": ["A227753 gives the positions of zeros."], "keyword": "nonn", "offset": "0,7", "author": "_Antti Karttunen_, Jul 26 2013", "references": 3, "revision": 21, "time": "2018-06-03T03:45:26-04:00", "created": "2013-08-25T03:36:01-04:00"}]}