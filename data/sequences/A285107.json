{"greeting": "Greetings from The On-Line Encyclopedia of Integer Sequences! http://oeis.org/", "query": "id:A285107", "count": 1, "start": 0, "results": [{"number": 285107, "data": "1,2,1,3,4,5,1,4,5,7,6,5,7,8,1,5,6,7,5,8,9,7,4,7,7,8,7,7,10,11,1,6,7,7,8,7,13,14,11,13,14,7,9,16,11,13,4,9,9,6,11,11,12,13,11,12,9,9,8,9,13,14,1,7,8,7,11,10,11,15,20,17,17,14,19,25,20,13,17,16,17,13,20,19,21,26,9,21,18,11,21,26,17,19,4,11,11,6,17,17,18,15,9", "name": "a(n) = A001222(A284577(n)).", "link": ["Antti Karttunen, <a href=\"/A285107/b285107.txt\">Table of n, a(n) for n = 0..8192</a>"], "formula": ["a(n) = A001222(A284577(n)).", "a(n) = A285106(n) - A285108(n).", "Other identities. For all n >= 0:", "A007306(1+n) = a(n) + 2*A285108(n)."], "program": ["(Scheme)", "(define (A285107 n) (A001222 (A284577 n)))", ";; A more practical version, needing only an implementation of A003987bi (bitwise-xor, A003987) and memoization-macro definec:", "(define (bitwise_xor_of_exp_lists nums1 nums2) (let ((len1 (length nums1)) (len2 (length nums2))) (cond ((< len1 len2) (bitwise_xor_of_exp_lists nums2 nums1)) (else (map A003987bi nums1 (append nums2 (make-list (- len1 len2) 0)))))))", "(definec (A260443as_coeff_list n) (cond ((zero? n) (list)) ((= 1 n) (list 1)) ((even? n) (cons 0 (A260443as_coeff_list (/ n 2)))) (else (add_two_lists (A260443as_coeff_list (/ (- n 1) 2)) (A260443as_coeff_list (/ (+ n 1) 2))))))", "(define (add_two_lists nums1 nums2) (let ((len1 (length nums1)) (len2 (length nums2))) (cond ((< len1 len2) (add_two_lists nums2 nums1)) (else (map + nums1 (append nums2 (make-list (- len1 len2) 0)))))))"], "xref": ["Cf. A001222, A003987, A007306, A284577, A285106, A285108."], "keyword": "nonn", "offset": "0,2", "author": "_Antti Karttunen_, Apr 11 2017", "references": 5, "revision": 8, "time": "2017-04-12T04:43:19-04:00", "created": "2017-04-12T04:43:19-04:00"}]}